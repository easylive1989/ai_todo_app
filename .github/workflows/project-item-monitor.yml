name: Project Item Monitor

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited]
  schedule:
    - cron: '*/5 * * * *'  # 每 5 分鐘檢查一次
  workflow_dispatch:
    inputs:
      project_number:
        description: 'Project number to monitor'
        required: false
        default: '5'

permissions:
  contents: read
  issues: read
  pull-requests: read
  actions: read

jobs:
  monitor-project-item:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Project Monitor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 執行 Project 監控腳本..."
          echo "📅 觸發事件: ${{ github.event_name }}"
          
          if [ "${{ github.event_name }}" == "issues" ] || [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "📋 檢測到新的 Issue/PR，檢查是否已加入 Project..."
            echo "🏷️  Issue/PR: ${{ github.event.issue.title || github.event.pull_request.title }}"
            echo "🔢 編號: #${{ github.event.issue.number || github.event.pull_request.number }}"
          elif [ "${{ github.event_name }}" == "schedule" ]; then
            echo "⏰ 定時檢查 Project 是否有新 items..."
            
            # 執行 Python 監控腳本進行一次性檢查
            python3 github_project_monitor.py &
            MONITOR_PID=$!
            
            # 等待 30 秒後停止（避免在 GitHub Actions 中長時間運行）
            sleep 30
            kill $MONITOR_PID 2>/dev/null || true
            
            echo "✅ 定時檢查完成"
          else
            echo "🔧 手動觸發的工作流程"
          fi

      - name: Create .env file for monitoring
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> .env
          echo "PROJECT_DIR=${{ github.workspace }}" >> .env
          echo "REQUEST_COMMIT=false" >> .env